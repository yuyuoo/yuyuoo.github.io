{"title":"ctf-web-WriteUp-Asuri-bugku","date":"2020-02-10T06:37:14.000Z","date_formatted":{"ll":"Feb 10, 2020","L":"02/10/2020","MM-DD":"02-10"},"thumbnail":"https://s2.ax1x.com/2020/01/19/1PCyex.jpg","link":"2020/02/10/ctf-web-WriteUp-Asuri-bugku","comments":true,"tags":["ctf","web"],"categories":["Programming"],"updated":"2020-02-10T06:38:44.583Z","content":"<blockquote>\n<p>年纪大了，方法总结的东西不写下来一会儿就忘了 </p>\n</blockquote>\n<h4 id=\"web2bugku-amp-佛说----白给asuri\">web2(bugku) &amp; 佛说 -- 白给(asuri)<a href=\"#web2bugku-amp-佛说----白给asuri\" title=\"web2(bugku) &amp; 佛说 -- 白给(asuri)\"></a></h4><p>网址链接：</p>\n<p><a href=\"http://120.24.86.145:8002/web2/\" target=\"_blank\">http://120.24.86.145:8002/web2/</a></p>\n<p><a href=\"47.102.107.100:39002\">47.102.107.100:39002</a></p>\n<p>直接按F12，隐藏在Elements里</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1Cm6SK.png\" class=\"φcy\" alt=\"web2\"></p>\n<!-- new line -->\n\n<p>Asuri另外一题白给2，按F12，Console里点击链接跳转</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1CmhTA.png\" class=\"φcy\" alt=\"白给2\"></p>\n<!-- new line -->\n\n<p>就能看到flag了</p>\n<h4 id=\"佛说----白给-3\">佛说 -- 白给 3<a href=\"#佛说----白给-3\" title=\"佛说 -- 白给 3\"></a></h4><p>网址链接：<a href=\"http://47.102.107.100:39004/\" target=\"_blank\"><a href=\"http://47.102.107.100:39004/\" target=\"_blank\">http://47.102.107.100:39004/</a></a></p>\n<p>按F12，按F5刷新，点Network，隐藏在请求头Header里了</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1CmqOg.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/03/M6mUpF97cyTjNLf.png\"></p>\n<!-- new line -->\n\n<h4 id=\"佛说----白给-4\">佛说 -- 白给 4<a href=\"#佛说----白给-4\" title=\"佛说 -- 白给 4\"></a></h4><p>网址前加<code>view-source：</code>看源码</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1CnClT.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/03/xvNC1Zock7IT5Eq.png\"></p>\n<!-- new line -->\n\n<h4 id=\"计算器bugku\">计算器(bugku)<a href=\"#计算器bugku\" title=\"计算器(bugku)\"></a></h4><p>网址链接：<a href=\"http://123.206.87.240:8002/yanzhengma/\" target=\"_blank\">http://123.206.87.240:8002/yanzhengma/</a></p>\n<p>出来的计算题是随机的，幸运的时候答案是个位数，点验证就获得了flag，不幸运的时候答案多余1位数，但框内只能填1位数，查看源码，修改输入框的<code>maxlength</code>限制，改为&gt;=1即可，输入多位答案，点击验证，跳出flag</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1CnE79.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/03/WtwspEOx6HQ4h12.png\"></p>\n<!-- new line -->\n\n<h4 id=\"web-基础-get-amp-web-基础-post-amp-点击一百万次bugku\">web 基础 $GET &amp; web 基础 $POST &amp; 点击一百万次(bugku)<a href=\"#web-基础-get-amp-web-基础-post-amp-点击一百万次bugku\" title=\"web 基础 $GET &amp; web 基础 $POST &amp; 点击一百万次(bugku)\"></a></h4><p><strong>两种最常用的 HTTP 方法是：GET 和 POST</strong></p>\n<ul><li><strong>GET</strong> - 从指定的资源请求数据。</li><li><strong>POST</strong> - 向指定的资源提交要被处理的数据</li></ul><p><strong>Get方法</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/test/demo_form.asp?name1=value1&amp;name2=value2</span><br></pre></td></tr></table></figure>\n\n<ul><li>GET 请求可被缓存</li><li>GET 请求保留在浏览器历史记录中</li><li>GET 请求可被收藏为书签</li><li>GET 请求不应在处理敏感数据时使用</li><li>GET 请求有长度限制</li><li>GET 请求只应当用于取回数据</li></ul><p><strong>POST 方法</strong></p>\n<p>查询字符串（名称 / 值对）是在 POST 请求的 HTTP 消息主体中发送的：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /test/demo_form.asp HTTP/<span class=\"number\">1.1</span></span><br><span class=\"line\">Host: w3schools.com</span><br><span class=\"line\">name1=value1&amp;name2=value2</span><br></pre></td></tr></table></figure>\n\n<ul><li>POST 请求不会被缓存</li><li>POST 请求不会保留在浏览器历史记录中</li><li>POST 不能被收藏为书签</li><li>POST 请求对数据长度没有要求</li></ul><p>web 基础 $GET：</p>\n<p>网址链接：<a href=\"http://123.206.87.240:8002/get/\" target=\"_blank\">http://123.206.87.240:8002/get/</a></p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1CnH41.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/03/DuQx9N7aWvlhKi6.png\"></p>\n<!-- new line -->\n\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1CuJrF.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/03/yHEJRzpA9ZdFhPt.png\"></p>\n<!-- new line -->\n\n<p>web 基础 $POST：</p>\n<p>网址链接：<a href=\"http://123.206.87.240:8002/post/\" target=\"_blank\">http://123.206.87.240:8002/post/</a></p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1CuRIA.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/04/Rc2QX6nCErif5j9.png\"></p>\n<!-- new line -->\n\n<p>安装火狐的插件hackbar</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1CujGq.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/04/ihFXvjtElncBfHs.png\"></p>\n<!-- new line -->\n\n<p>“点击一百万次”</p>\n<p>源码中判断<code>clicks</code>变量是否大于等于1000000，hackbar中post data，填<code>clicks = 1000001</code>得到flag</p>\n<h4 id=\"矛盾bugku\">矛盾(bugku)<a href=\"#矛盾bugku\" title=\"矛盾(bugku)\"></a></h4><p>网址链接：<a href=\"http://123.206.87.240:8002/get/index1.php\" target=\"_blank\">http://123.206.87.240:8002/get/index1.php</a></p>\n<p>输入一个不是数字但<code>num==1</code>，<code>==</code>是弱类型比较，如果等号两边类型不同先转换成相同类型，字符串会转成数字，具体是保留字母前的数字，例如 123ab7c 会转成 123，ab7c 会转成 0（字母前没数字就是 0）。这里用Get方法改链接<code>?num=1a</code>。</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1CKGWt.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/04/6YrsT7oZfhqW5wa.png\"></p>\n<!-- new line -->\n\n<h4 id=\"web3bugku\">web3(bugku)<a href=\"#web3bugku\" title=\"web3(bugku)\"></a></h4><p>网址链接：<a href=\"http://123.206.87.240:8002/web3/\" target=\"_blank\">http://123.206.87.240:8002/web3/</a></p>\n<!-- new line -->\n\n<p>用到Burp suite抓包软件，安装后第一次尝试，随机抓取一个地址，查看拦截的请求</p>\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1CKtQf.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/04/BXgkpbe4Ov1N2uw.png\"></p>\n<!-- new line -->\n\n<p>根据官网指示安装CA certification，设置Https代理。</p>\n<p>问题来了，尝试抓包<code>https://www.baidu.com/</code></p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1CKDFs.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/05/AKLeqt7Fwzplb3W.png\"></p>\n<!-- new line -->\n\n<p>后面百度莫得界面，forward之后就</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1CKsWq.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/05/xqao3t4M52sN6c7.png\"></p>\n<!-- new line -->\n\n<p>不知道怎么解决了...</p>\n<p>这题没要求https抓包，抓包后F12看到调试器下面一行字符</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1CKclV.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/05/Bd1FaXOUyKqVkiv.png\"></p>\n<!-- new line -->\n\n<p>粘贴进burp自带的decoder，选decoder as html，看到flag</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1CMP6f.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/05/9msSbvFHBeUlrM5.png\"></p>\n<!-- new line -->\n\n<h4 id=\"域名解析（-bugku）\">域名解析（ bugku）<a href=\"#域名解析（-bugku）\" title=\"域名解析（ bugku）\"></a></h4><p>网址链接：<a href=\"123.206.87.240\">123.206.87.240</a></p>\n<p>域名解析是指把一个域名指向一个 ip，就像通讯录把姓名指向一个电话一样。用burpsuite抓包，直接把host里的ip改成域名即可。</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1CMrHe.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/05/OfAkUYhuyRaKL9r.png\"></p>\n<!-- new line -->\n\n<h4 id=\"你必须让他停下--amp-头等舱bugku\">你必须让他停下 &amp; 头等舱(bugku)<a href=\"#你必须让他停下--amp-头等舱bugku\" title=\"你必须让他停下  &amp; 头等舱(bugku)\"></a></h4><p>网址链接：<a href=\"http://123.206.87.240:8002/web12/\" target=\"_blank\">http://123.206.87.240:8002/web12/</a></p>\n<p><a href=\"123.206.87.240:9009/hd.php\">123.206.87.240:9009/hd.php</a></p>\n<p>用到<code>burp repeater</code>，<code>burp repeater</code>作为 burp suite 中一款验证 HTTP 消息的测试工具，通常用于<strong>多次重放请求响应</strong>和<strong>手工修改请求消息的修改后对服务器端响应的消息分析</strong></p>\n<p>这题先抓包，再<code>forward</code>，查看<code>http history</code>，右击捕获到的get数据包，选<code>sent to repeater</code>，在<code>Repeater</code>中点几次<code>Go</code>，找找到flag</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1CMR3t.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/05/5Yed6GoHVJKTafZ.png\"></p>\n<!-- new line -->\n\n<p>头等舱打开什么也没有，burpsuite抓包后<code>sent to repeater</code>，<code>Go</code>一次就看到了flag。</p>\n<h4 id=\"变量bugku\">变量(bugku)<a href=\"#变量bugku\" title=\"变量(bugku)\"></a></h4><p>网址链接：<a href=\"http://123.206.87.240:8004/index1.php\" target=\"_blank\">http://123.206.87.240:8004/index1.php</a></p>\n<p>用到php的知识，打印所有的全局变量，都在$GLOBALS [<em>index<em>] 数组中，</em>index</em> 保存变量的名称。在链接后面加Get请求<a href=\"http://123.206.87.240:8004/index1.php?args=GLOBALS\" target=\"_blank\">http://123.206.87.240:8004/index1.php?args=GLOBALS</a></p>\n<h4 id=\"web5（bugku）\">web5（bugku）<a href=\"#web5（bugku）\" title=\"web5（bugku）\"></a></h4><p>查看源码，看到一大串符号，是 JS 代码经过 jsfuck 编码的格式，复制粘贴到控制台，回车</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1C3lG9.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/06/czdxNwgE8WXFCuV.png\"></p>\n<!-- new line -->\n\n<h4 id=\"网站被黑-amp-输入密码查看-flagbugku\">网站被黑 &amp; 输入密码查看 flag(bugku)<a href=\"#网站被黑-amp-输入密码查看-flagbugku\" title=\"网站被黑 &amp; 输入密码查看 flag(bugku)\"></a></h4><p>都用到爆破</p>\n<p>网址链接：<a href=\"http://123.206.87.240:8002/webshell/\" target=\"_blank\">http://123.206.87.240:8002/webshell/</a></p>\n<p><a href=\"http://123.206.87.240:8002/baopo/\" target=\"_blank\">http://123.206.87.240:8002/baopo/</a></p>\n<p>根据提示，虽然没什么用，但是经常遇到，<code>webshell</code>，猜测这个网站存在 <code>webshell</code></p>\n<p>webshell就是以asp、php、jsp或者cgi等网页文件形式存在的一种命令执行环境，也可以将其称做为一种网页后门。黑客在入侵了一个网站后，通常会将asp或php后门文件与网站服务器WEB目录下正常的网页文件混在一起，然后就可以使用浏览器来访问asp或者php后门，得到一个命令执行环境，以达到控制网站服务器的目的。</p>\n<p>猜测：<a href=\"http://123.206.87.240:8002/webshell/shell.php\" target=\"_blank\">http://123.206.87.240:8002/webshell/shell.php</a></p>\n<p>要填pass，用burpsuite抓包，随便填一个如<code>admin</code>，forward放行，这时burpsuite</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1C30Gd.png\" class=\"φcy\" alt=\"&lt;https://github.com/yuyuoo/Transfer-station/raw/master/IMG/TIM%E5%9B%BE%E7%89%8720191006140023.png&gt;\"></p>\n<!-- new line -->\n\n<p>Raw空白处右击，<code>sent to Intruder</code>。</p>\n<p>在Intruder中Payload Options的<code>Add from list</code>处选<code>Password</code>，右上角<code>Intruder</code>--&gt;<code>start attact</code>，等待结果</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1C3ysP.png\" class=\"φcy\" alt=\"&lt;https://github.com/yuyuoo/Transfer-station/raw/master/IMG/TIM%E5%9B%BE%E7%89%8720191006140410.png&gt;\"></p>\n<!-- new line -->\n\n<p>将结果按<code>Length</code>升序排序，第一个是<code>hack</code>，选中，下方Response中找到flag。</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1C3gZ8.png\" class=\"φcy\" alt=\"https://github.com/yuyuoo/Transfer-station/raw/master/IMG/TIM%E5%9B%BE%E7%89%8720191006111845.png\"></p>\n<!-- new line -->\n\n<p>下一题“输入密码查看 flag”</p>\n<p>抓包，放行，随意输入5位如12345，放行，<code>sent to intruder</code>，在 Positions 中点击 clear 清除 burp 认为需要猜测的密码，然后选中 12345 (也就是我们刚才输入的密码，点击 add)，改Payloads中的设置，</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1C8psx.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/06/rNFSfWjknvsMLET.png\"></p>\n<!-- new line -->\n\n<p>Options中设置Number of threads为100，等待后结果为13579，得到flag。</p>\n<h4 id=\"管理员系统bugku\">管理员系统(bugku)<a href=\"#管理员系统bugku\" title=\"管理员系统(bugku)\"></a></h4><p>网址链接：<a href=\"http://123.206.31.85:1003/\" target=\"_blank\">http://123.206.31.85:1003/</a></p>\n<p>随便输入一个用户名和密码，提示<code>请联系本地管理员登录</code>。</p>\n<p>直接F12有一串字符<code>dGVzdDEyMw==</code>，base64解码得到test123，猜想是密码，用户名随便填一个admin，用burpsuite抓包，填用户名和密码后伪装成本地访问，改包：Headers 中增添一对键值对： <code>X-Forwarded-For : 127.0.0.1</code>，X-Forwarded-For 是一个 HTTP 扩展头部，主要是为了让 Web 服务器获取访问用户的真实 IP 地址，但是这个 IP 却未必是真实的。一些开发者为了获取客户 IP，经常会使用 request.remote_ip 来获得用户 IP。但是很多用户都是通过代理来访问服务器的，如果使用 remote_ip 这个全局变量来获取 IP，开发者往往获得的是代理服务器的 IP，并不是用户真正的 IP。</p>\n<p>放行，得到flag。</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1C8EJH.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/06/Z4LjYxQDg7y2MHc.png\"></p>\n<!-- new line -->\n\n<h4 id=\"wab4bugku\">wab4(bugku)<a href=\"#wab4bugku\" title=\"wab4(bugku)\"></a></h4><!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/01/19/1C8mQI.png\" class=\"φcy\" alt=\"https://i.loli.net/2019/10/06/j4SxZAayrhBlEFc.png\"></p>\n<!-- new line -->\n\n<p>提示要unescape</p>\n<p>在线unescape这一大段，得到一串字符，填入框内submit得到flag。</p>\n<h4 id=\"flag-在-index-里（bugku）\">flag 在 index 里（bugku）<a href=\"#flag-在-index-里（bugku）\" title=\"flag 在 index 里（bugku）\"></a></h4><p>网址链接：<a href=\"http://123.206.87.240:8005/post/index.php?file=show.php\" target=\"_blank\">http://123.206.87.240:8005/post/index.php?file=show.php</a></p>\n<p>这里用到一个读取 php 文件源码的方法，是文件包含漏洞（本地文件包含（Local File Include），简称 LFI）。构造 URL：<a href=\"http://123.206.87.240:8005/post/index.php?file=php://filter/read/convert.base64-encode/resource=index.php\" target=\"_blank\">http://123.206.87.240:8005/post/index.php?file=php://filter/read/convert.base64-encode/resource=index.php</a></p>\n<p>然后来解释 <code>php://filter/read/convert.base64-encode/resource=index.php</code></p>\n<p>首先这是一个 file 关键字的 get 参数传递，<code>php://</code> 是一种协议名称，<code>php://filter/</code> 是一种访问本地文件的协议，<code>/read=convert.base64-encode /</code>表示读取的方式是 base64 编码后，<code>resource=index.php</code>表示目标文件为 <code>index.php</code>。输入这个链接，抓包，再放行，这样就能读取文件源码并以 base64 的 方式输出。将 base64 码解码就拿到 flag 了。</p>\n<h4 id=\"备份是个好习惯bugku\">备份是个好习惯(bugku)<a href=\"#备份是个好习惯bugku\" title=\"备份是个好习惯(bugku)\"></a></h4><p>备份文件一般情况是在后缀名后加的 .swp，.bak，于是将 URL 改成 <code>123.206.87.240:8002/web16/index.php.bak</code>，回车，下载到一个 php 文件，</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by PhpStorm.</span></span><br><span class=\"line\"><span class=\"comment\"> * User: Norse</span></span><br><span class=\"line\"><span class=\"comment\"> * Date: 2017/8/6</span></span><br><span class=\"line\"><span class=\"comment\"> * Time: 20:22</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include_once</span> <span class=\"string\">\"flag.php\"</span>;</span><br><span class=\"line\">ini_set(<span class=\"string\">\"display_errors\"</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">$str = strstr($_SERVER[<span class=\"string\">'REQUEST_URI'</span>], <span class=\"string\">'?'</span>);</span><br><span class=\"line\">$str = substr($str,<span class=\"number\">1</span>);</span><br><span class=\"line\">$str = str_replace(<span class=\"string\">'key'</span>,<span class=\"string\">''</span>,$str);</span><br><span class=\"line\">parse_str($str);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> md5($key1);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> md5($key2);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(md5($key1) == md5($key2) &amp;&amp; $key1 !== $key2)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $flag.<span class=\"string\">\"取得flag\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>网上说双写key绕过<code>str_replace</code>，这个函数就是把<code>$str</code>里的<code>key</code>替换成空，双写成<code>kkeyey</code>或者<code>kekeyy</code>都行，key1和key2不同但md5加密值要相同</p>\n<p>构造两个md5值都为0e开头的</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;123.206.87.240:8002&#x2F;web16&#x2F;index.php?kekeyy1&#x3D;s878926199a&amp;kekeyy2&#x3D;s155964671a</span><br></pre></td></tr></table></figure>\n\n<p>或者利用无法 <code>hash</code> 的数组，返回空来绕过</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;123.206.87.240:8002&#x2F;web16&#x2F;index.php?kkeyey1[]&#x3D;1&amp;kkeyey2[]&#x3D;2</span><br></pre></td></tr></table></figure>\n\n<p>都能得到flag。</p>\n","prev":{"title":"ctf-web-WriteUp-2-Asuri-Bugku","link":"2020/02/10/ctf-web-WriteUp-2-Asuri-Bugku"},"next":{"title":"项脊轩志","link":"2020/02/10/项脊轩志"},"plink":"https://yuyuoo.github.io/2020/02/10/ctf-web-WriteUp-Asuri-bugku/","copyright":{"license":"Attribution-NonCommercial-NoDerivatives 4.0 International","published":"February 10, 2020","updated":"February 10, 2020","author":"YuYuoo"}}