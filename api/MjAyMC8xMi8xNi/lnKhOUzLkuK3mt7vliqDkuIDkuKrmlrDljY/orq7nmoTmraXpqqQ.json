{"title":"在NS2中添加一个新协议的步骤","date":"2020-12-16T11:59:29.000Z","date_formatted":{"ll":"Dec 16, 2020","L":"12/16/2020","MM-DD":"12-16"},"thumbnail":"https://s3.ax1x.com/2020/12/16/r1GcWD.jpg","link":"2020/12/16/在NS2中添加一个新协议的步骤","comments":true,"tags":["NS2"],"categories":["Notes"],"updated":"2020-12-16T12:18:07.118Z","content":"<p>NS2的安装根据网上的教程，安装在ubuntu16.04。环境部署好之后，无论在哪个文件夹下输入ns命令，回车，都会出现一个%开头。</p>\n<p>NS2与NS3不同，协议的源代码在ns2.35文件夹下，这些存了C文件的子文件夹是ns2自带的协议，如AOMDV、AODV等等。</p>\n<p>我们添加的新协议名字是<code>teaomdv</code>，将新协议的代码写好后，需要需要ns2.35文件夹下几处地方。</p>\n<p>在<code>common/packet.h</code>中：</p>\n<ul><li>添加</li></ul><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">packet_t</span> PT_TEAOMDV = <span class=\"number\">73</span>;</span><br></pre></td></tr></table></figure>\n\n<p>修改最后<code>PT_NTYPE</code>的值为74。</p>\n<ul><li>添加</li></ul><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type == PT_TEAOMDV</span><br></pre></td></tr></table></figure>\n\n<ul><li>添加</li></ul><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name_[PT_TEAOMDV] = <span class=\"string\">\"TEAOMDV\"</span></span><br></pre></td></tr></table></figure>\n\n<ul><li>添加</li></ul><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// TEAOMDV patch</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> teaomdv_salvage_count_;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>在<code>trace/cmu-trace.cc</code>中：</p>\n<ul><li>添加</li></ul><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;teaomdv/teaomdv_packet.h&gt; //TEAOMDV</span></span></span><br></pre></td></tr></table></figure>\n\n<ul><li><p>添加<code>CMUTrace::format_xxx(Packet *p , int offest)</code> 函数，内容参考 <code>format_aomdv</code> 函数的</p></li><li><p>在 <code>void CMUTrace::format(Packet* p, const char *why)</code> 函数中参照 aomdv 的写法添加</p></li></ul><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// TEAOMDV patch</span></span><br><span class=\"line\"><span class=\"keyword\">case</span> PT_TEAOMDV:</span><br><span class=\"line\">\tformat_teaomdv(p, offset);</span><br><span class=\"line\">\t<span class=\"keyword\">break</span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>在<code>trace/cmu_trace.h</code>中：</p>\n<ul><li>添加<code>void format_teaomdv(Packet *p, int offset);</code>到<code>class CMUTrace</code>中。</li></ul><p>在<code>queue/priqueue.cc</code>中：</p>\n<ul><li>在 <code>case PT_AOMDV</code> 下面添加 <code>case PT_TEAOMDV:</code></li></ul><p>在<code>tcl/lib/ns-packet.tcl</code>中：</p>\n<p>搜索 AOMDV，然后在 AOMDV 的下面添加</p>\n <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># TEAOMDV patch</span></span><br><span class=\"line\">TEAOMDV</span><br></pre></td></tr></table></figure>\n\n<p>表示声明。</p>\n<p>在<code>tcl/lib/ns-lib.tcl</code>中：</p>\n<ul><li>添加</li></ul><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TEAOMDV &#123;</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">set</span> ragent [$self create-teaomdv-agent $node]</span><br><span class=\"line\">\t\t    &#125;</span><br></pre></td></tr></table></figure>\n\n<ul><li>添加</li></ul><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># TEAOMDV patch</span></span><br><span class=\"line\">Simulator instproc create-teaomdv-agent &#123; node &#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">set</span> ragent [new Agent/TEAOMDV [$node node-addr]]</span><br><span class=\"line\">\t$self at <span class=\"number\">0.0</span> <span class=\"string\">\"$ragent start\"</span></span><br><span class=\"line\">\t$node <span class=\"keyword\">set</span> ragent_ $ragent</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> $ragent</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>在<code>tcl/lib/ns-mobilenode.tcl</code>中：</p>\n<ul><li>为了设置协议的混杂模式，添加：</li></ul><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Special processing for TEAOMDV</span></span><br><span class=\"line\">\t<span class=\"keyword\">set</span> teaomdvonly [<span class=\"keyword\">string</span> first <span class=\"string\">\"TEAOMDV\"</span> [$agent <span class=\"keyword\">info</span> class]] </span><br><span class=\"line\">\t<span class=\"keyword\">if</span> &#123;$teaomdvonly != <span class=\"number\">-1</span> &#125; &#123;</span><br><span class=\"line\">\t\t$agent <span class=\"keyword\">if</span>-queue [$self <span class=\"keyword\">set</span> ifq_(<span class=\"number\">0</span>)]   <span class=\"comment\">;# ifq between LL and MAC</span></span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>在makefile中添加</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">teaomdv&#x2F;teaomdv_logs.o teaomdv&#x2F;teaomdv.o \\</span><br><span class=\"line\">teaomdv&#x2F;teaomdv_rtable.o teaomdv&#x2F;teaomdv_rqueue.o \\</span><br></pre></td></tr></table></figure>\n\n<p>然后在ns2.35文件夹下输入命令：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make file&amp;&amp;make</span><br></pre></td></tr></table></figure>\n\n<p>没有报错就成功了。</p>\n<p>在ns2.35/tcl文件夹下是所有的tcl文件，可以用于设置仿真环境。</p>\n<p>根据需要编写awk脚本用于分析tcl文件运行生成的.tr文件也就是trace数据流。得到的结果是我们提取出的数字，编写与ns3类似的画图脚本，用gnuplot命令画图就可以得到相应的折线、曲线图。</p>\n","prev":{"title":"Capturing 802.11ax with the Jetson Nano","link":"2021/01/14/Capturing-802-11ax-with-the-Jetson-Nano"},"next":{"title":"利用NS3部署不同拓扑无线网络","link":"2020/11/13/利用NS3部署不同拓扑无线网络"},"plink":"https://yuyuoo.github.io/2020/12/16/在NS2中添加一个新协议的步骤/","copyright":{"license":"Attribution-NonCommercial-NoDerivatives 4.0 International","published":"December 16, 2020","updated":"December 16, 2020","author":"YuYuoo"}}