{"title":"在jetson nano上使用aircrack","date":"2021-02-19T09:51:48.000Z","date_formatted":{"ll":"Feb 19, 2021","L":"02/19/2021","MM-DD":"02-19"},"thumbnail":"https://i.loli.net/2021/02/19/XpIrA57YEWGQmUe.png","link":"2021/02/19/在jetson-nano上使用aircrack","comments":true,"tags":["Wi-Fi","毕设"],"categories":["Notes"],"updated":"2021-02-19T10:05:11.020Z","content":"<h4 id=\"常用命令：\">常用命令：<a href=\"#常用命令：\" title=\"常用命令：\"></a></h4><p>设置网卡 monitor 模式：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fconfig wlan1 down</span><br><span class=\"line\">iwconfig wlan1 mode monitor</span><br><span class=\"line\">ifconfig wlan1 up</span><br></pre></td></tr></table></figure>\n\n<p>设置网卡监听模式（创建虚接口 mon0）:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">airmon-ng start wlan0 11 (11 表示信道)</span><br></pre></td></tr></table></figure>\n\n<p>关闭虚接口和设置信道：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">airomon-ng stop mon0</span><br><span class=\"line\">iwconfig wlan1 channel 10</span><br></pre></td></tr></table></figure>\n\n<p>用 wlan0 或者虚接口扫描周围的热点和终端：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">airodump-ng wlan0</span><br><span class=\"line\">airodump-ng wlan0 -w 1.pcap\t<span class=\"comment\">#可抓握手包</span></span><br></pre></td></tr></table></figure>\n\n<p>抓指定 ap 的握手包：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">airodump-ng -w wpa1.cap --bssid 被攻击 AP 的 MAC --channel 11（信道号）wlan0（抓包的网卡）</span><br></pre></td></tr></table></figure>\n\n<p>tcpdump 指定时间或者指定大小进行循环抓取报文：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -i eth3 -s0 -G 60 -Z root -w % Y_% m% d_% H% M_% S.pcap <span class=\"comment\">#60 秒</span></span><br><span class=\"line\">tcpdump -i eth3 -s0 -C 1 -Z root -w jiangsuyinhang.pcap <span class=\"comment\">#一兆</span></span><br></pre></td></tr></table></figure>\n\n<p>editcap  裁剪包：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">editcap -A <span class=\"string\">'2014-12-10 10:11:01'</span> -B <span class=\"string\">'2014-12-10 10:21:01'</span> input.pcap output.pcap</span><br><span class=\"line\"><span class=\"comment\">#\"- A &lt;start-time&gt; 和\" - B &lt; end-time &gt; 选项可以过滤出在这个时间段到达的数据包（如，从 2:30 ～ 2:35）时间的格式为 \"YYYY-MM-DD HH:MM:SS\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">editcap input.pcap output.pcap 401-500</span><br><span class=\"line\"><span class=\"comment\">#从 input.pcap 文件中提取 100 个包（从 401 到 500）并将它们保存到 output.pcap 中</span></span><br><span class=\"line\"></span><br><span class=\"line\">editcap -D 10 input.pcap output.pcap</span><br><span class=\"line\"><span class=\"comment\">#使用 \"-D &lt;dup-window&gt;\" （dup-window 可以看成是对比的窗口大小，仅与此范围内的包进行对比）选项可以提取出重复包</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">editcap -c &lt;packets-per-file&gt; &lt;input-pcap-file&gt; &lt;output-prefix&gt;</span><br><span class=\"line\"><span class=\"comment\">#将一个 pcap 文件分割成数据包数目相同的多个文件</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">editcap -i &lt;seconds-per-file&gt; &lt;input-pcap-file&gt; &lt;output-prefix&gt;</span><br><span class=\"line\"><span class=\"comment\">#将一个 pcap 文件分割成秒数相同的多个文件</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mergecap -w output.pcap input.pcap input2.pcap [input3.pcap . . .]</span><br><span class=\"line\"><span class=\"comment\">#当合并多个文件时，mergecap 默认将内部的数据包以时间先后来排序</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mergecap -a -w output.pcap input.pcap input2.pcap</span><br><span class=\"line\"><span class=\"comment\">#将 input.pcap 文件的内容写入到 output.pcap, 并且将 input2.pcap 的内容追加在后面</span></span><br></pre></td></tr></table></figure>\n\n<p>hashcat 破解握手包密码：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aircrack-ng &lt;input.cap&gt; -J &lt;out.hccap&gt;</span><br><span class=\"line\"><span class=\"comment\">#用 aircrack-ng 把 cap 转换成 hccap 类型数据包</span></span><br><span class=\"line\"></span><br><span class=\"line\">hashcat -m 2500 testap.hccap pass.txt</span><br><span class=\"line\"><span class=\"comment\">#用 hashcat 破解 WPA/PSK 密码（ -m 2500 为破解的模式为 WPA/PSK 方式）</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"airodump-ng抓包工具\">airodump-ng抓包工具<a href=\"#airodump-ng抓包工具\" title=\"airodump-ng抓包工具\"></a></h4><p>usage: <code>airodump-ng&lt;options&gt;&lt;interface&gt;[,&lt;interface&gt;,...]</code></p>\n<p>Options:</p>\n<ul><li><code>-i</code>,<code>-ivs</code>: 仅将抓取信息保存为.ivs(只对破解有用).</li><li><code>-w&lt;prefix&gt;</code>, <code>-write&lt;prefix&gt;</code>: 保存为指定日文件名，我一般用这个，尤其是多个网络时，指定了也好区分</li><li><code>-e</code>, <code>–beacons</code>: 保存所有的 beacons, 默认情况况下是丢弃那些无用的数据包的</li><li><code>-g</code>,<code>–gpsd</code>: 指示 airodump-ng 应该尝试使用 GPSd 获取坐标</li><li><code>–showack</code>: 打印 ACK / CTS / RTS 统计数据。有助于调试和一般的注入优化。允许探测 “隐藏” 的站，因为它们太远，无法捕获高比特率帧，因为 ACK 帧以每秒 1Mbps 的速度发送。</li><li><code>-h</code>: 隐藏的站点.</li><li><code>-c &lt;channel&gt;[,&lt;channel&gt;[,…]]</code>,<code>–channel &lt;channel&gt;[,&lt;channel&gt;[,…]]</code>: 指出要监听的频道。默认情况下，airodump-ng 在所有 2.4GHz 通道上跳转。</li><li><code>-r &lt;file&gt;</code>: 从文件中读取数据包</li><li><code>-x &lt;msecs&gt;</code>: 主动扫描模拟 (发送探测请求并解析探测响应)</li><li><code>-M</code>,<code>–manufacturer</code>: 显示一个制造商列，其中包含从 IEEE OUI 列表获得的信息</li></ul><p>Filteroptions:</p>\n<ul><li><code>-encrypt&lt;suite&gt;</code>: 使用密码序列过滤 AP,只显示与给定加密匹配的网络</li><li><code>-m &lt;mask&gt;</code>,<code>-netmask&lt;netmask&gt;</code>: 使用掩码过滤 AP</li><li><code>-d &lt;bssid&gt;</code>, <code>-bssid&lt;bssid&gt;</code>: 使用 bssid 过滤 AP,它将只显示与给定 bssid 匹配的网络。</li><li><code>-a</code>: 过滤无关的客户端</li></ul><p>如果你有一个连接到电脑的 GPS 接收器，airodump-ng 可以记录下找到的接入点的坐标。此外，airodump-ng 会写出一个文本文件，其中包含所看到的所有访问点和客户机的详细信息。</p>\n<p>一个例子：执行命令</p>\n<p><code>root@sch01ar:~# airodump-ng wlan0mon</code></p>\n<p><img src=\"https://i.loli.net/2021/02/19/eEVNinXfucl7JtS.png\" class=\"φcy\" alt=\"image-20210128150856562\"></p>\n<p><strong>BSSID</strong> AP 的 MAC 地址。如果在 client section 中 BSSID 显示为 “（not associated）”，那么意味着该 客户端没有和 AP 连接上。unassociated 状态下，它正在搜索能够连接上的 AP。</p>\n<p><strong>PWR</strong>  网卡报告的信号水平，它主要取决与驱动，当信号值越高时说明你离 AP 或电脑越近。如果一个 BSSID 的 PWR 是 - 1，说明网卡的驱动不支持报告信号水平。如果是部分客户端的 PWR 为 - 1，那么说明该客户端不在你网卡能监听到的范围内，但是你能捕捉到 AP 发往该客户端的数据。如果所有的客户端 PWR 值都为 - 1，那么说明网卡驱动不支持信号水平报告。</p>\n<p><strong>RXQ</strong> 接收质量，它用过去 10 秒钟内成功接收到的分组（管理和数据帧）的百分比来衡量。</p>\n<p><strong>Beacons</strong> AP 发出的信标编号，每个接入点（AP）在最低速率（1M）时差不多每秒会发送 10 个左右的 beacon，所以它们能在很远的地方就被发现。</p>\n<p><strong>#Data</strong> 被捕获到的数据分组的数量（如果是 WEP，则代表唯一 IV 的数量），包括广播分组。</p>\n<p><strong>#/s</strong> 过去 10 秒钟内每秒捕获数据分组的数量</p>\n<p><strong>CH</strong>  信道号（从 beacon 中获取）</p>\n<p><strong>MB</strong> AP 所支持的最大速率，如果 MB=11，它是 802.11b，如果 MB=22，它是 802.11b+，如果更高就是 802.11g。后面的点（高于 54 之后）表明支持短前导码（short preamble）。</p>\n<p><strong>ENC</strong> 使用的加密 算法体系。OPN = 无加密， “WEP?”=WEP 或者更高（没有足够的数据来选择（WEP 与 WPA/WPA2）），WEP（没有问号）表明静态或动态 WEP，如果出现 TKIP 或 CCMP，那么就是 WPA/WPA2。</p>\n<p><strong>CIPHER</strong> 检测到的加密算法，CCMP，WRAAP，TKIP，WEP，WEP40 或者 WEP104 中的一个。典型的来说（不是一定的），TKIP 与 WPA 结合使用，CCMP 与 WPA2 结合使用。</p>\n<p><strong>AUTH</strong> 使用的认证 协议。 以下的其中一种：MGT（WPA/WPA2 使用独立的认证服务器，平时我们常说的 802.1x，radius，eap 等），SKA（WEP 的共享密钥），PSK（WPA/WPA2 的预共享密钥），或者  <strong>OPN</strong>（WEP 开放式）</p>\n<p><strong>ESSID</strong> 所谓的 “SSID”，如果启用 隐藏 SSID 的话它可以为空，这种情况下 airodump-ng 试图从 probe responses 和 association requests 中获取 ssid</p>\n<p><strong>STATION</strong> 客户端的 MAC 地址，包括连上的和想要搜索 AP 来连接的客户端。如果客户端没有连接上，就在 BSSID 下显示 “not associated”</p>\n<p><strong>Lost</strong> 在过去 10 秒钟内丢失的数据分组，基于序列号检测。</p>\n<p><strong>Probes</strong> 被客户端查探的 ESSID。如果客户端正试图连接一个 AP 但是没有连接上，那么就显示在这里。</p>\n<h4 id=\"使用airodump抓包流程：\">使用airodump抓包流程：<a href=\"#使用airodump抓包流程：\" title=\"使用airodump抓包流程：\"></a></h4><ul><li><code>airmon-ng start wlan0</code> 开启monitor模式</li><li><code>airodump-ng wlan0mon</code> 全网扫描，wlan0mon是接口，看到我家路由器在信道3</li><li><code>airmon-ng start wlan0 3</code></li><li>开始抓包生成cap文件：<code>airodump-ng -c 3 -w test --output-format pcap wlan0mon</code></li><li>停止捕获（停止监视模式）：<code>sudo airmon-ng stop wlan0mon</code></li></ul>","prev":{"title":"leetcode中等题","link":"2021/11/04/leetcode中等题"},"next":{"title":"Capturing 802.11ax with the Jetson Nano","link":"2021/01/14/Capturing-802-11ax-with-the-Jetson-Nano"},"plink":"https://yuyuoo.github.io/2021/02/19/在jetson-nano上使用aircrack/","copyright":{"license":"Attribution-NonCommercial-NoDerivatives 4.0 International","published":"February 19, 2021","updated":"February 19, 2021","author":"YuYuoo"}}